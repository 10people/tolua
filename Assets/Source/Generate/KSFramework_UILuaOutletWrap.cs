//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class KSFramework_UILuaOutletWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(KSFramework.UILuaOutlet), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("SetLuaTable", SetLuaTable);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("OutletInfos", get_OutletInfos, set_OutletInfos);
		L.RegVar("m_TargetLuaTable", get_m_TargetLuaTable, set_m_TargetLuaTable);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetLuaTable(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			KSFramework.UILuaOutlet obj = (KSFramework.UILuaOutlet)ToLua.CheckObject(L, 1, typeof(KSFramework.UILuaOutlet));
			obj.SetLuaTable();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OutletInfos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			KSFramework.UILuaOutlet obj = (KSFramework.UILuaOutlet)o;
			System.Collections.Generic.List<KSFramework.UILuaOutlet.OutletInfo> ret = obj.OutletInfos;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index OutletInfos on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_TargetLuaTable(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			KSFramework.UILuaOutlet obj = (KSFramework.UILuaOutlet)o;
			LuaInterface.LuaTable ret = obj.m_TargetLuaTable;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_TargetLuaTable on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OutletInfos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			KSFramework.UILuaOutlet obj = (KSFramework.UILuaOutlet)o;
			System.Collections.Generic.List<KSFramework.UILuaOutlet.OutletInfo> arg0 = (System.Collections.Generic.List<KSFramework.UILuaOutlet.OutletInfo>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<KSFramework.UILuaOutlet.OutletInfo>));
			obj.OutletInfos = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index OutletInfos on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_TargetLuaTable(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			KSFramework.UILuaOutlet obj = (KSFramework.UILuaOutlet)o;
			LuaTable arg0 = ToLua.CheckLuaTable(L, 2);
			obj.m_TargetLuaTable = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_TargetLuaTable on a nil value" : e.Message);
		}
	}
}

